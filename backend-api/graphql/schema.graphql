type Query {
    getDoc(id: Int!): Doc!
    getPacket(id: Int!): Packet!
    getQuestion(id: Int!): Question!
    getContent(id: Int!): Content!
    getFilteredQuestions(categories: [String!]!, mode: FilterMode!): [Question]!
}

type Mutation {
    extract(url: String!): Int!
    categorize(docId: Int!): Boolean!
    setDoc: Boolean!
}

type Doc {
    id: Int!
    desc: String!
    packets: [Packet!]!
}

type Packet {
    id: Int!
    order: Int!
    questions: [Question!]!
}
      
type Question {
    id: Int!
    order: Int!
    contents: [Content!]!
    categories: [String!]
}
      
type Content {
    id: Int!
    order: Int!
    obj: String!
    dataType: DataType!
    contentType: ContentType!
}
      
enum ContentType {
    Question
    Answer
    Packet
}

enum DataType {
    Text
    ImageUrl
    Table
}
      
enum FilterMode {
    AND
    OR
}